// Mocks generated by Mockito 5.4.4 from annotations
// in ftu_lms/test/mocks/repositories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:ftu_lms/data/bean/app_configurations.dart' as _i4;
import 'package:ftu_lms/data/bean/user_object/user_object.dart' as _i8;
import 'package:ftu_lms/data/remote/interfaces/base_response_object.dart'
    as _i9;
import 'package:ftu_lms/data/remote/wrappers/network_error.dart' as _i10;
import 'package:ftu_lms/data/remote/wrappers/result.dart' as _i2;
import 'package:ftu_lms/data/repositories/user_repository.dart' as _i7;
import 'package:ftu_lms/utils/biometric_auth/biometric_authenticator.dart'
    as _i11;
import 'package:hive/hive.dart' as _i3;
import 'package:local_auth/local_auth.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, E extends Exception> extends _i1.SmartFake
    implements _i2.Result<T, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Box].
///
/// See the documentation for Mockito's code generation for more information.
class MockBox extends _i1.Mock implements _i3.Box<_i4.AppConfigurations> {
  @override
  Iterable<_i4.AppConfigurations> get values => (super.noSuchMethod(
        Invocation.getter(#values),
        returnValue: <_i4.AppConfigurations>[],
        returnValueForMissingStub: <_i4.AppConfigurations>[],
      ) as Iterable<_i4.AppConfigurations>);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get lazy => (super.noSuchMethod(
        Invocation.getter(#lazy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Iterable<dynamic> get keys => (super.noSuchMethod(
        Invocation.getter(#keys),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as Iterable<dynamic>);

  @override
  int get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isNotEmpty => (super.noSuchMethod(
        Invocation.getter(#isNotEmpty),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Iterable<_i4.AppConfigurations> valuesBetween({
    dynamic startKey,
    dynamic endKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #valuesBetween,
          [],
          {
            #startKey: startKey,
            #endKey: endKey,
          },
        ),
        returnValue: <_i4.AppConfigurations>[],
        returnValueForMissingStub: <_i4.AppConfigurations>[],
      ) as Iterable<_i4.AppConfigurations>);

  @override
  _i4.AppConfigurations? getAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #getAt,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i4.AppConfigurations?);

  @override
  Map<dynamic, _i4.AppConfigurations> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <dynamic, _i4.AppConfigurations>{},
        returnValueForMissingStub: <dynamic, _i4.AppConfigurations>{},
      ) as Map<dynamic, _i4.AppConfigurations>);

  @override
  dynamic keyAt(int? index) => super.noSuchMethod(
        Invocation.method(
          #keyAt,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Stream<_i3.BoxEvent> watch({dynamic key}) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [],
          {#key: key},
        ),
        returnValue: _i6.Stream<_i3.BoxEvent>.empty(),
        returnValueForMissingStub: _i6.Stream<_i3.BoxEvent>.empty(),
      ) as _i6.Stream<_i3.BoxEvent>);

  @override
  bool containsKey(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<void> put(
    dynamic key,
    _i4.AppConfigurations? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> putAt(
    int? index,
    _i4.AppConfigurations? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAt,
          [
            index,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> putAll(Map<dynamic, _i4.AppConfigurations>? entries) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAll,
          [entries],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> add(_i4.AppConfigurations? value) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [value],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<Iterable<int>> addAll(Iterable<_i4.AppConfigurations>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [values],
        ),
        returnValue: _i6.Future<Iterable<int>>.value(<int>[]),
        returnValueForMissingStub: _i6.Future<Iterable<int>>.value(<int>[]),
      ) as _i6.Future<Iterable<int>>);

  @override
  _i6.Future<void> delete(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteAt,
          [index],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteAll(Iterable<dynamic>? keys) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [keys],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> compact() => (super.noSuchMethod(
        Invocation.method(
          #compact,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteFromDisk() => (super.noSuchMethod(
        Invocation.method(
          #deleteFromDisk,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> flush() => (super.noSuchMethod(
        Invocation.method(
          #flush,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  @override
  set userObject(_i8.UserObject? _userObject) => super.noSuchMethod(
        Invocation.setter(
          #userObject,
          _userObject,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> saveUserInfo(_i8.UserObject? userObject) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserInfo,
          [userObject],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i8.UserObject?> retrieveUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #retrieveUserInfo,
          [],
        ),
        returnValue: _i6.Future<_i8.UserObject?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.UserObject?>.value(),
      ) as _i6.Future<_i8.UserObject?>);

  @override
  _i6.Future<void> removeUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #removeUserInfo,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i8.UserPermission?> retrieveUserPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveUserPermission,
          [],
        ),
        returnValue: _i6.Future<_i8.UserPermission?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.UserPermission?>.value(),
      ) as _i6.Future<_i8.UserPermission?>);

  @override
  _i6.Future<void> toggleBiometricLogin(bool? enable) => (super.noSuchMethod(
        Invocation.method(
          #toggleBiometricLogin,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<
      _i2.Result<_i9.BaseResponseObject<_i8.UserObject?>,
          _i10.NetworkError>> login(
    String? userName,
    String? password,
    int? idDonVi,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            userName,
            password,
            idDonVi,
          ],
        ),
        returnValue: _i6.Future<
            _i2.Result<_i9.BaseResponseObject<_i8.UserObject?>,
                _i10.NetworkError>>.value(_FakeResult_0<
            _i9.BaseResponseObject<_i8.UserObject?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #login,
            [
              userName,
              password,
              idDonVi,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<
            _i2.Result<_i9.BaseResponseObject<_i8.UserObject?>,
                _i10.NetworkError>>.value(_FakeResult_0<
            _i9.BaseResponseObject<_i8.UserObject?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #login,
            [
              userName,
              password,
              idDonVi,
            ],
          ),
        )),
      ) as _i6.Future<
          _i2
          .Result<_i9.BaseResponseObject<_i8.UserObject?>, _i10.NetworkError>>);

  @override
  _i6.Future<
      _i2.Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>> update(
          _i8.UserObject? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [user],
        ),
        returnValue: _i6.Future<
                _i2
                .Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>.value(
            _FakeResult_0<_i9.BaseResponseObject<int?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #update,
            [user],
          ),
        )),
        returnValueForMissingStub: _i6.Future<
                _i2
                .Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>.value(
            _FakeResult_0<_i9.BaseResponseObject<int?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #update,
            [user],
          ),
        )),
      ) as _i6
          .Future<_i2.Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>);

  @override
  _i6.Future<
      _i2.Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>> changePass(
    String? oldPass,
    String? newPass,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePass,
          [
            oldPass,
            newPass,
          ],
        ),
        returnValue: _i6.Future<
                _i2
                .Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>.value(
            _FakeResult_0<_i9.BaseResponseObject<int?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #changePass,
            [
              oldPass,
              newPass,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<
                _i2
                .Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>.value(
            _FakeResult_0<_i9.BaseResponseObject<int?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #changePass,
            [
              oldPass,
              newPass,
            ],
          ),
        )),
      ) as _i6
          .Future<_i2.Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>);

  @override
  _i6.Future<
      _i2.Result<_i9.BaseResponseObject<int?>,
          _i10.NetworkError>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i6.Future<
                _i2
                .Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>.value(
            _FakeResult_0<_i9.BaseResponseObject<int?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
        returnValueForMissingStub: _i6.Future<
                _i2
                .Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>.value(
            _FakeResult_0<_i9.BaseResponseObject<int?>, _i10.NetworkError>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i6
          .Future<_i2.Result<_i9.BaseResponseObject<int?>, _i10.NetworkError>>);
}

/// A class which mocks [BiometricAuthenticator].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricAuthenticator extends _i1.Mock
    implements _i11.BiometricAuthenticator {
  @override
  _i6.Future<bool> deviceIsSupported() => (super.noSuchMethod(
        Invocation.method(
          #deviceIsSupported,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> checkBiometrics() => (super.noSuchMethod(
        Invocation.method(
          #checkBiometrics,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i12.BiometricType>?> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue: _i6.Future<List<_i12.BiometricType>?>.value(),
        returnValueForMissingStub:
            _i6.Future<List<_i12.BiometricType>?>.value(),
      ) as _i6.Future<List<_i12.BiometricType>?>);

  @override
  _i6.Future<bool> authenticate(String? localizedReason) => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [localizedReason],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> authenticateWithBiometrics(String? localizedReason) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticateWithBiometrics,
          [localizedReason],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> cancelAuthentication() => (super.noSuchMethod(
        Invocation.method(
          #cancelAuthentication,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
